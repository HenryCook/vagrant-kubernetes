apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: gcr.io/google_containers/hyperkube:v1.6.3
    command:
    - /hyperkube
    - apiserver
    - --bind-address=0.0.0.0
    - --insecure-bind-address=0.0.0.0
    - --insecure-port=8080
    - --secure-port=6443
    - --etcd-servers=http://127.0.0.1:4001
    - --service-cluster-ip-range=10.100.0.0/16
    - --admission-control=NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota
    - --kubelet-client-certificate=/srv/kubernetes/ssl/kubelet-client.pem
    - --kubelet-client-key=/srv/kubernetes/ssl/kubelet-client-key.pem
    - --tls-ca-file=/srv/kubernetes/ssl/ca.pem
    - --tls-cert-file=/srv/kubernetes/ssl/kube-apiserver-server.pem
    - --tls-private-key-file=/srv/kubernetes/ssl/kube-apiserver-server-key.pem
    - --token-auth-file=/srv/kubernetes/ssl/token
    - --allow-privileged=true
    - --anonymous-auth=false
    - --storage-backend=etcd3
    resources:
      requests:
        cpu: 100m
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 8080
      initialDelaySeconds: 15
      timeoutSeconds: 15
    ports:
    - containerPort: 6443
      hostPort: 6443
      name: https
    - containerPort: 8080
      hostPort: 8080
      name: local
    volumeMounts:
    - mountPath: /srv/kubernetes
      name: srvkube
      readOnly: true
  volumes:
  - hostPath:
      path: /srv/kubernetes
    name: srvkube
